import telebot
from telebot import types
import os
import random  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º random –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞



# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞
bot = telebot.TeleBot("6713071175:AAFC3g1CTJGdDameBhacWEvsAh19DfbCoOk")


# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞
base_dir = os.path.dirname(os.path.abspath(__file__))

# –°–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–∏ "–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏: –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É"
audio_files = {
    "–ü—Ä–æ—Å—Ç–æ –ø–∏–¥—Ä": {"path": os.path.join(base_dir, "audio/prosto_pidr.mp3")},
    "–†—ã–≥–æ—Ç–∞": {"path": os.path.join(base_dir, "audio/Rygota.mp3")},
    "AAAA": {"path": os.path.join(base_dir, "audio/AAAA.mp3")},
    "–≥–æ–±–ª–∏–Ω—Å–∫–∏–π": {"path": os.path.join(base_dir, "audio/nevyutnaya.mp3")},
    "–ù–∞ —á–µ–ª–æ–≤–µ—á–∏–π –ø–µ—Ä–µ–≤–µ—Å—Ç–∏?": {"path": os.path.join(base_dir, "audio/cheloveckii.mp3")},
    "–ü–æ—è—Å–Ω–µ–Ω–∏–µ –∑–∞ –≥–æ—Ä–æ–¥": {"path": os.path.join(base_dir, "audio/za gorod.mp3")},
    "–•–ê–•–ê": {"path": os.path.join(base_dir, "audio/HAHA.mp3")},
    "–¢–≤–∞—Ä–∏": {"path": os.path.join(base_dir, "audio/tvari.mp3")},
    "–ë–õ–Ø–Ø–Ø–¢–¨": {"path": os.path.join(base_dir, "audio/blyaaat.mp3")},
    "–î—É—Ä—É –≥–Ω–∞—Ç—å": {"path": os.path.join(base_dir, "audio/duru_gnat.mp3")},
    "–•—É–π–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç": {"path": os.path.join(base_dir, "audio/nerabotaet.mp3")},
    "–°–£–ö–ê–ê–ê": {"path": os.path.join(base_dir, "audio/SUKAaaa.mp3")},
    "–ó–∞–µ–±–∞–ª–æ –Ω–∞—Ö—É–π": {"path": os.path.join(base_dir, "audio/zaebalonahui.mp3")},
    "–ï–±–∞–ª—å–Ω–∏–∫": {"path": os.path.join(base_dir, "audio/ebalnik.mp3")},
    "–ï–±–∞–ª—å–Ω–∏–∫-2": {"path": os.path.join(base_dir, "audio/ebalnik_rashibu.mp3")},
    "–ë—Ä—É—Å–Ω–∏–∫–∏–Ω –§–ú": {"path": os.path.join(base_dir, "audio/brusnikinFM.mp3")},
    "–û–¥–æ–±—Ä–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∫–∏": {"path": os.path.join(base_dir, "audio/kreditka.mp3")},
    "–£–º–µ—Ç—å –Ω–∞–¥–æ": {"path": os.path.join(base_dir, "audio/umetnado.mp3")},
    "–Ø –≤–ª–æ–∂–∏–ª –≤ —ç—Ç–æ—Ç —á–∞—Ç —Å–≤–æ—é –∂–∏–∑–Ω—å...": {"path": os.path.join(base_dir, "audio/vetotchaszalozhil.mp3")},
    "–ö–æ–≥–¥–∞ –ø–æ–ª—É—á–∏–ª –∫—Ä–µ–¥–∏—Ç–∫—É": {"path": os.path.join(base_dir, "audio/VYVMENYANEVERILI.mp3")},
    "–•—É–µ–≤–æ": {"path": os.path.join(base_dir, "audio/huevo.mp3")},
    "–õ–æ—Ö —Ç–≤–æ–π –æ—Ç–µ—Ü": {"path": os.path.join(base_dir, "audio/lohtvoiotec.mp3")},
    "–ü–∞—Ü–∞–Ω—ã –æ—Ö—É–µ–≤–∞—é—Ç": {"path": os.path.join(base_dir, "audio/pacabiohuevaut.mp3")},
    "–õ–æ—Ö —ç—Ç–æ —Ç—ã": {"path": os.path.join(base_dir, "audio/Poshelnahuiloh.mp3")},
    "–í–æ –≤—Å—ë–º –≤–∏–Ω–æ–≤–∞—Ç –°–∞–Ω—ë–∫": {"path": os.path.join(base_dir, "audio/sanekvinovat.mp3")},
    "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–±–∞—Ç—ã": {"path": os.path.join(base_dir, "audio/Shveden.mp3")},
    "–î–∞–¥—É—Ç —Å—Ç–≤–æ–ª": {"path": os.path.join(base_dir, "audio/stvol dadut zavalyu.mp3")},
    "–ê–π—Ñ–æ–Ω–æ–¥—Ä–æ—á–µ—Ä": {"path": os.path.join(base_dir, "audio/suka iphone.mp3")},
    "–ó–∞–ø—Ä–µ—â—É": {"path": os.path.join(base_dir, "audio/zaprechu.mp3")},
    "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏": {"path": os.path.join(base_dir, "audio/zablokir.mp3")},
    "–ü–∞–¥–∏–∫": {"path": os.path.join(base_dir, "audio/padik.mp3")},
    "–ó–∞—Ä–µ–∂—É": {"path": os.path.join(base_dir, "audio/zarezhu.mp3")},
    "–ú–æ–∂–µ—Ç –Ω–µ –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–∑–∞": {"path": os.path.join(base_dir, "audio/huinya_na_kopceve.mp3")},
    "–°–∞–ø–æ–≥–æ–º –≤ –µ–±–∞–ª–æ": {"path": os.path.join(base_dir, "audio/sapogom.mp3")},
    "–ü–∏–∑–¥—ã –≤—ã–ø–∏—à—É –∏ –í–°–Å": {"path": os.path.join(base_dir, "audio/skotina.mp3")},
    "UN–ª–∏–º–∏—Ç–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ": {"path": os.path.join(base_dir, "audio/anlimitnoe.mp3")},
    "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –º–∞—Å—Ç–µ—Ä": {"path": os.path.join(base_dir, "audio/comp.mp3")},
    "–ù–µ–º—ã—Ç—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω": {"path": os.path.join(base_dir, "audio/nemytyi.mp3")},
    "–§–µ–¥–µ—Ä–∞—Ü–∏—è –ë–∞—Ä—Å–∞": {"path": os.path.join(base_dir, "audio/federaciya_barsa.mp3")},
    "–í—ã–¥–∞—ë—Ç –±–∞–∑—É": {"path": os.path.join(base_dir, "audio/vydaet_bazu.mp3")},
    "–ë–∞–Ω–∞–Ω–∞ –º–∞–º–∞": {"path": os.path.join(base_dir, "audio/banana.mp3")},
    "–î–ª—è –¥–µ–≤–æ—á–∫–∏": {"path": os.path.join(base_dir, "audio/dvedevocki.mp3")},
    "–£—Ä–æ–∫–∏ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–≥–æ": {"path": os.path.join(base_dir, "audio/uroki.mp3")},
    "–ü–æ–¥–≤–µ–ª–∏": {"path": os.path.join(base_dir, "audio/podveli.mp3")},
    "–¢–æ–ø–æ–ª–∏–Ω–Ω—ã–π –ø—É—Ö": {"path": os.path.join(base_dir, "audio/topolinyi_puh.mp3")}, 
    "–ü–µ—Å–Ω—è: '–¢—ã —Å—É–∫–∞'": {"path": os.path.join(base_dir, "audio/ty_suka.mp3")},
    "–í—Ä–µ–º–µ–Ω–Ω–∞—è —è–º–∞": {"path": os.path.join(base_dir, "audio/vremennaya_yma.mp3")},
    "–ù–∞–ø–∞—Å–æ–≤–∞—è –ø–∏–∑–¥–æ–±–æ–ª–∏—è": {"path": os.path.join(base_dir, "audio/napasovaya.mp3")}, 
    "–í–ª–∞—Å—É –Ω–µ–ª—å–∑—è": {"path": os.path.join(base_dir, "audio/vlasu_nelzya.mp3")},
    "–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Å—Ç–∞–∂": {"path": os.path.join(base_dir, "audio/STAZH.mp3")},
    "–ù–µ–≤–Ω—è—Ç–Ω–∞—è 2": {"path": os.path.join(base_dir, "audio/bubosy.mp3")},
    "–ë—ã–∫-–æ—Å–µ–º–µ–Ω–∏—Ç–µ–ª—å": {"path": os.path.join(base_dir, "audio/byk_osem.mp3")},
    "–î—Ä–∞–∫–∞ —Å –≥–æ–ª—É–±—è–º–∏": {"path": os.path.join(base_dir, "audio/draka_golub.mp3")},
    "–ü–ª–µ–±–µ–π –µ–±–∞–Ω–Ω—ã–π": {"path": os.path.join(base_dir, "audio/osilit_nihya.mp3")},
    "–°–≥—É—â–µ–Ω–∫–∞": {"path": os.path.join(base_dir, "audio/v_unitaz.mp3")},
    "–Ø —É–µ–±–∞–Ω": {"path": os.path.join(base_dir, "audio/ya_ueban.mp3")},
    "–ü–∞–¥–∫–∏–µ –Ω–∞ –±–∞–±": {"path": os.path.join(base_dir, "audio/padkie_bab.mp3")},
    "–Ø –ø—Ä–∏–µ—Ö–∞–ª": {"path": os.path.join(base_dir, "audio/ya_priehal.mp3")},
    "–ü–æ–ª—É—Å–µ–∫—Å": {"path": os.path.join(base_dir, "audio/polusex.mp3")},
    "–ü—É—Å—Ç—å —Å—è–¥–µ—Ç": {"path": os.path.join(base_dir, "audio/pust_syadet.mp3")},
    "–ü—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏": {"path": os.path.join(base_dir, "audio/promezhutok_vremeni.mp3")},
    "–ö–ª–∞—Ä–∞ –∑–∞ —Å–æ—Ç–∫—É": {"path": os.path.join(base_dir, "audio/klara_za_sotku.mp3")}, 
    "–ù–∞—Å—Ä–∏,–ù–∞—Å—Ä–∏": {"path": os.path.join(base_dir, "audio/nasri.mp3")},
    "–ù–µ—Ä–≤–Ω—ã–π —Ç–∏–∫": {"path": os.path.join(base_dir, "audio/nervnyi_tik.mp3")},
    "–ú–æ–∂–µ—Ç–µ –Ω–µ –æ—Ç–≤–µ—á–∞—Ç—å": {"path": os.path.join(base_dir, "audio/mozhete_ne_otvechat.mp3")},
    "–ü–∏–≤–∞ –∫—É–ø–ª—é": {"path": os.path.join(base_dir, "audio/piva_kuplu.mp3")},
    "–¢–µ–±—è –≤—ã–µ–±—É—Ç (Remake –ö–æ–ª—è)": {"path": os.path.join(base_dir, "audio/tebya_vyebut_remake.mp3")},
    "–£—Ö–æ—Ö–æ": {"path": os.path.join(base_dir, "audio/uhoho.mp3")},
    "–û–Ω–∞ –µ–≥–æ –≤—ã–∫–∏–Ω–µ—Ç": {"path": os.path.join(base_dir, "audio/vykinet.mp3")},
    "–ò–¥–∏ –Ω–∞ —Ö—É–π": {"path": os.path.join(base_dir, "audio/idi_nahui.mp3")},
    "–ü–æ—Ö–æ–∂–µ –Ω–∞ –∫—É–∫–æ–ª–¥—ã—á–∞": {"path": os.path.join(base_dir, "audio/kukoldych.mp3")},
    "–ß—Ç–æ —Å –º–æ–Ω–∏—Ç–æ—Ä–æ–º": {"path": os.path.join(base_dir, "audio/monitor.mp3")},
    "–ù–∏–∫–æ–≥–æ –ª—É—á—à–µ –º–µ–Ω—è": {"path": os.path.join(base_dir, "audio/hui_dozhdetes.mp3")},
    "–£—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —á—Ç–æ –æ–Ω –ø–∏–¥—Ä": {"path": os.path.join(base_dir, "audio/ustanovili_pidr.mp3")},
    "–î–∞–ª—å—à–µ —Å–µ–∫—Å –∏ –í–°–Å": {"path": os.path.join(base_dir, "audio/dalshe_sex.mp3")},
    "–ß–∏—Å—Ç–æ –≤ —Ö–∞—Ç–µ": {"path": os.path.join(base_dir, "audio/chisto.mp3")},
    "–ö–æ–≥–¥–∞ —Ç–µ–±–µ –≤–µ—Å–µ–ª–æ...": {"path": os.path.join(base_dir, "audio/kogda_tebe_veselo.mp3")},



    


}

# –°–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–∏ "–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã: —Å–ø–∏—Å–æ–∫ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫"
topics = {
    "–°–í–ï–ñ–ê–ß–û–öüî•": ["–ò–¥–∏ –Ω–∞ —Ö—É–π", "–ü–æ—Ö–æ–∂–µ –Ω–∞ –∫—É–∫–æ–ª–¥—ã—á–∞", "–ß—Ç–æ —Å –º–æ–Ω–∏—Ç–æ—Ä–æ–º", "–ù–∏–∫–æ–≥–æ –ª—É—á—à–µ –º–µ–Ω—è", "–£—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —á—Ç–æ –æ–Ω –ø–∏–¥—Ä", "–î–∞–ª—å—à–µ —Å–µ–∫—Å –∏ –í–°–Å", "–ß–∏—Å—Ç–æ –≤ —Ö–∞—Ç–µ", "–ö–æ–≥–¥–∞ —Ç–µ–±–µ –≤–µ—Å–µ–ª–æ..." ],
    "–ù–û–í–ò–ù–ö–òüÜï:–£–≥—Ä–æ–∑—ã‚ò†Ô∏è‚ò†Ô∏è": ["–ó–∞—Ä–µ–∂—É", "–ú–æ–∂–µ—Ç –Ω–µ –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–∑–∞", "–°–∞–ø–æ–≥–æ–º –≤ –µ–±–∞–ª–æ", "–ü–∏–∑–¥—ã –≤—ã–ø–∏—à—É –∏ –í–°–Å", "–ü–ª–µ–±–µ–π –µ–±–∞–Ω–Ω—ã–π"  ],
    "–ù–û–í–ò–ù–ö–òüÜï:–ë—Ä—É—Å–Ω–∏–∫–∞ –ø–æ—è—Å–Ω—è–µ—Çü§å" : ["UN–ª–∏–º–∏—Ç–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ", "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –º–∞—Å—Ç–µ—Ä", "–ù–µ–º—ã—Ç—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω", "–§–µ–¥–µ—Ä–∞—Ü–∏—è –ë–∞—Ä—Å–∞", "–í—ã–¥–∞—ë—Ç –±–∞–∑—É", "–ù–∞–ø–∞—Å–æ–≤–∞—è –ø–∏–∑–¥–æ–±–æ–ª–∏—è" ],
    "–ù–û–í–ò–ù–ö–òüÜï:–ö–†–ò–ö–ò –∏ –ø–µ—Å–Ω–∏üò±&üé§" : ["–ë–∞–Ω–∞–Ω–∞ –º–∞–º–∞", "–î–ª—è –¥–µ–≤–æ—á–∫–∏", "–£—Ä–æ–∫–∏ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–≥–æ", "–ü–æ–¥–≤–µ–ª–∏", "–¢–æ–ø–æ–ª–∏–Ω–Ω—ã–π –ø—É—Ö", "–ü–µ—Å–Ω—è: '–¢—ã —Å—É–∫–∞'", "–í—Ä–µ–º–µ–Ω–Ω–∞—è —è–º–∞", "–í–ª–∞—Å—É –Ω–µ–ª—å–∑—è", "–Ø —É–µ–±–∞–Ω", "–û–Ω–∞ –µ–≥–æ –≤—ã–∫–∏–Ω–µ—Ç"  ],
    "–ù–û–í–ò–ù–ö–òüÜï:–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫–æ–ª—é—Ö–∏ü•≥ü•≥": ["–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Å—Ç–∞–∂", "–ù–µ–≤–Ω—è—Ç–Ω–∞—è 2", "–ë—ã–∫-–æ—Å–µ–º–µ–Ω–∏—Ç–µ–ª—å", "–î—Ä–∞–∫–∞ —Å –≥–æ–ª—É–±—è–º–∏","–°–≥—É—â–µ–Ω–∫–∞", "–ü–∞–¥–∫–∏–µ –Ω–∞ –±–∞–±", "–Ø –ø—Ä–∏–µ—Ö–∞–ª", "–ü–æ–ª—É—Å–µ–∫—Å", "–ü—É—Å—Ç—å —Å—è–¥–µ—Ç", "–ü—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏" ],
    "–ù–û–í–ò–ù–ö–òüÜï:–ö–æ—Ä–æ—Ç–∫–∏–µüí®üí®": ["–ö–ª–∞—Ä–∞ –∑–∞ —Å–æ—Ç–∫—É", "–ù–∞—Å—Ä–∏,–ù–∞—Å—Ä–∏", "–ù–µ—Ä–≤–Ω—ã–π —Ç–∏–∫", "–ú–æ–∂–µ—Ç–µ –Ω–µ –æ—Ç–≤–µ—á–∞—Ç—å", "–ü–∏–≤–∞ –∫—É–ø–ª—é", "–¢–µ–±—è –≤—ã–µ–±—É—Ç (Remake –ö–æ–ª—è)", "–£—Ö–æ—Ö–æ"  ],
    "–ë—ã–∫—É—é—â–∏–πüêÉü•ä": ["–ü—Ä–æ—Å—Ç–æ –ø–∏–¥—Ä", "–†—ã–≥–æ—Ç–∞", "–ù–∞ —á–µ–ª–æ–≤–µ—á–∏–π –ø–µ—Ä–µ–≤–µ—Å—Ç–∏?", "–ü–æ—è—Å–Ω–µ–Ω–∏–µ –∑–∞ –≥–æ—Ä–æ–¥", "–ï–±–∞–ª—å–Ω–∏–∫", "–ï–±–∞–ª—å–Ω–∏–∫-2"],
    "–ú–∞–∫–∞–∫–∏—áüêí": ["–†—ã–≥–æ—Ç–∞", "AAAA", "–≥–æ–±–ª–∏–Ω—Å–∫–∏–π", "–•–ê–•–ê", "–¢–≤–∞—Ä–∏", "–ó–∞–ø—Ä–µ—â—É"],
    "–Ø—Ä–æ—Å—Ç—åü§¨üî•üî•": ["–ë–õ–Ø–Ø–Ø–¢–¨", "–î—É—Ä—É –≥–Ω–∞—Ç—å", "–•—É–π–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", "–ó–∞–µ–±–∞–ª–æ –Ω–∞—Ö—É–π", "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–±–∞—Ç—ã"],
    "–ú–æ–º–µ–Ω—Ç—ã –≥–æ—Ä–¥–æ—Å—Ç–∏‚≠êÔ∏è": ["–ë—Ä—É—Å–Ω–∏–∫–∏–Ω –§–ú", "–û–¥–æ–±—Ä–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∫–∏", "–£–º–µ—Ç—å –Ω–∞–¥–æ", "–Ø –≤–ª–æ–∂–∏–ª –≤ —ç—Ç–æ—Ç —á–∞—Ç —Å–≤–æ—é –∂–∏–∑–Ω—å...", "–ö–æ–≥–¥–∞ –ø–æ–ª—É—á–∏–ª –∫—Ä–µ–¥–∏—Ç–∫—É"],
    "–ò—Å–∫—É—Å—Å—Ç–≤–æ –¥–∏–ø–ª–æ–º–∞—Ç–∏–∏üí≠": ["–•—É–µ–≤–æ—Å—Ç—å", "–ü–∞—Ü–∞–Ω—ã –æ—Ö—É–µ–≤–∞—é—Ç", "–î–∞–¥—É—Ç —Å—Ç–≤–æ–ª", "–ê–π—Ñ–æ–Ω–æ–¥—Ä–æ—á–µ—Ä", "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏", "–í–æ –≤—Å—ë–º –≤–∏–Ω–æ–≤–∞—Ç –°–∞–Ω—ë–∫", "–õ–æ—Ö —ç—Ç–æ —Ç—ã", "–õ–æ—Ö —Ç–≤–æ–π –æ—Ç–µ—Ü", "–ü–∞–¥–∏–∫"],
    
}



donate_audio_files = [
    os.path.join(base_dir, "audio/dai_na_gusya.mp3"),
    os.path.join(base_dir, "audio/DONATE2.mp3"),
    os.path.join(base_dir, "audio/dai_GUSYA.mp3"),
]

def log_user_action(user_id, action):
    log_file_path = os.path.join(base_dir, 'user_actions.log')
    with open(log_file_path, 'a', encoding='utf-8') as log_file:  # Specify encoding here
        log_file.write(f"User ID: {user_id}, Action: {action}\n")

def notify_users_once(user_ids, message):
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    log_file_path = os.path.join(base_dir, 'update_notified.txt')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ –º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if os.path.exists(log_file_path):
        print("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    success_ids = []
    failed_ids = []

    for user_id in user_ids:
        try:
            bot.send_message(user_id, message)
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
            success_ids.append(user_id)  # –î–æ–±–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π ID –≤ —Å–ø–∏—Å–æ–∫
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            failed_ids.append(user_id)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—É—Å–ø–µ—à–Ω—ã–π ID –≤ —Å–ø–∏—Å–æ–∫

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –±–æ–ª—å—à–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    with open(log_file_path, 'w', encoding='utf-8') as f:
        f.write('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.\n')
        f.write("–£—Å–ø–µ—à–Ω—ã–µ ID:\n")
        for user_id in success_ids:
            f.write(f"{user_id}\n")
        f.write("–ù–µ—É–¥–∞—á–Ω—ã–µ ID:\n")
        for user_id in failed_ids:
            f.write(f"{user_id}\n")

def create_inline_phrases_keyboard(topic):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    buttons = []
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ—Ä–∞–∑—ã
    for phrase in topics[topic]:
        buttons.append(types.InlineKeyboardButton(text=phrase, callback_data=f"play_{phrase}"))
    
    if len(buttons) % 2 != 0:
        buttons.append(types.InlineKeyboardButton(text=" ", callback_data="none"))

    keyboard.add(*buttons)
    keyboard.add(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    
    return keyboard

@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    for topic in topics.keys():
        keyboard.add(types.InlineKeyboardButton(text=topic, callback_data=f"topic_{topic}"))

    random_button = types.InlineKeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω–∞—è —Ñ—Ä–∞–∑–æ—á–∫–∞", callback_data="random_phrase")
    donate_button = types.InlineKeyboardButton(text="–î–æ–Ω–∞—Ç –Ω–∞ –ü–ò–í–û üç∫", callback_data="donate")
    keyboard.add(random_button, donate_button)
    
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –∏ –Ω–∞–∫–∏–Ω—å –Ω–∞ –ø–∏–≤–æüòâüëå:', reply_markup=keyboard)

user_ids = [529675743, 402417063, 126798048, 1118235356, 582667115, 538677038, 835829519, 1854291293, 340501530, 184765660, 263879978, 107739615, 1165457840, 1198267690, 1998907657, 5193149161, 923695852, 107739615, 837372912, 854854532, 1854291293, 215781246 ]  # –°—é–¥–∞ –¥–æ–±–∞–≤—å—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
message = "–ë–æ—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è! Ver. 1.03.\n 1) –ò–∑–º–µ–Ω–µ–Ω –¥–∏–∑–∞–π–Ω –±–æ—Ç–∞\n 2) –° –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –∫–Ω–æ–ø–æ–∫ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑\n 3)–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã\n 4) –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏."
notify_users_once(user_ids, message)

@bot.callback_query_handler(func=lambda call: call.data.startswith("topic_"))
def handle_topic_selection(call):
    topic = call.data.split("_")[1]
    log_user_action(call.from_user.id, f"Selected topic: {topic}")  # –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ç–µ–º—ã
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏ —Ñ—Ä–∞–∑—É:", reply_markup=create_inline_phrases_keyboard(topic))

@bot.callback_query_handler(func=lambda call: call.data.startswith("play_"))
def handle_phrase_selection(call):
    phrase = call.data.split("_")[1]
    audio_path = audio_files[phrase]["path"]
    log_user_action(call.from_user.id, f"Played phrase: {phrase}")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Ñ—Ä–∞–∑—ã
    
    if os.path.exists(audio_path):
        with open(audio_path, 'rb') as audio_file:
            bot.send_audio(call.message.chat.id, audio=audio_file)
    else:
        bot.send_message(call.message.chat.id, f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_path}")

@bot.callback_query_handler(func=lambda call: call.data == "random_phrase")
def handle_random_phrase(call):
    random_phrase = random.choice(list(audio_files.keys()))
    audio_path = audio_files[random_phrase]["path"]
    log_user_action(call.from_user.id, f"Played random phrase: {random_phrase}")  # –õ–æ–≥–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É
    
    if os.path.exists(audio_path):
        with open(audio_path, 'rb') as audio_file:
            bot.send_audio(call.message.chat.id, audio=audio_file)
        bot.send_message(call.message.chat.id, f"üé≤ –°–ª—É—á–∞–π–Ω–∞—è —Ñ—Ä–∞–∑–æ—á–∫–∞: {random_phrase}")
    else:
        bot.send_message(call.message.chat.id, f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_path}")

@bot.callback_query_handler(func=lambda call: call.data == "donate")
def handle_donate_button(call):
    log_user_action(call.from_user.id, "Clicked donate button")  # –õ–æ–≥–∏—Ä—É–µ–º –¥–æ–Ω–∞—Ç
    donate_keyboard = types.InlineKeyboardMarkup()

    donate_button = types.InlineKeyboardButton(text="üî•üî•üî• –ù–ê –ñ–ê–¢–ï–¶–ö–ò–ô –ì–£–°–¨!!! üî•üî•üî•", callback_data='donate_to_gus')
    donate_keyboard.add(donate_button)

    bot.send_message(call.message.chat.id, "–ó–ê–ö–ò–ù–¨ –ù–ê –ü–ò–í–ê–°–ò–ö –ë–†–£–°–ù–ò–ö–ï", reply_markup=donate_keyboard)

    image_path = os.path.join(base_dir, "images/beer.jpg")
    if os.path.exists(image_path):
        with open(image_path, 'rb') as image_file:
            bot.send_photo(call.message.chat.id, photo=image_file)
    else:
        bot.send_message(call.message.chat.id, f"–ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {image_path}")

    if donate_audio_files:
        random_audio = random.choice(donate_audio_files)
        if os.path.exists(random_audio):
            with open(random_audio, 'rb') as audio_file:
                bot.send_audio(call.message.chat.id, audio=audio_file)
        else:
            bot.send_message(call.message.chat.id, f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {random_audio}")
    else:
        bot.send_message(call.message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤.")

# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞ –ñ–∞—Ç–µ—Ü–∫–∏–π –ì—É—Å—å"
@bot.callback_query_handler(func=lambda call: call.data == "donate_to_gus")
def handle_donate_to_gus_button(call):
    log_user_action(call.from_user.id, "–ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É '–ù–∞ –ñ–∞—Ç–µ—Ü–∫–∏–π –ì—É—Å—å'")  # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    donate_url = "https://yoomoney.ru/to/410011621862970"
    bot.send_message(call.message.chat.id, f"–°–°–´–õ–û–ß–ö–ê —á—Ç–æ–±—ã –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –ë—Ä—É—Å–Ω–∏–∫–µ –Ω–∞ –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–∏–µ!(–•–æ—Ç—å —Ä—É–±–ª–∏–∫, –Ω–æ –ª—É—á—à–µ –°–û–¢–û–ß–ö–ê): {donate_url}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@bot.callback_query_handler(func=lambda call: call.data == "back")
def handle_back_button(call):
    log_user_action(call.from_user.id, "Clicked back button")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    start(call.message)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True)

